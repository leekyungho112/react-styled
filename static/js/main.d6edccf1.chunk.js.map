{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","x","time_close","y","open","high","low","close","options","chart","height","xaxis","categories","yaxis","show","Container","styled","div","PriceItem","ul","PercentChange","li","Price","tickersData","loading","ath_price","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","Header","header","Loader","Title","h1","props","theme","accentColor","Overview","OverviewItem","Description","p","LinkContainer","Tabs","Tab","span","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","Helmet","name","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","element","CoinList","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","basename","process","GlobalStyle","createGlobalStyle","bgColor","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.d6edccf1.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport const fetchCoins = () => {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n};\n\nexport const fetchCoinInfo = (coinId: string) => {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n};\n\nexport const fetchCoinTickers = (coinId: string) => {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n};\n\nexport const fetchCoinHistory = (coinId: string) => {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n};\n","import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ReactApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open, price.high, price.low, price.close],\n              })),\n            },\n          ]}\n          options={{\n            chart: {\n              height: 500,\n            },\n            xaxis: {\n              type: 'datetime',\n\n              categories: data?.map((price) => price.time_close),\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst PriceItem = styled.ul``;\nconst PercentChange = styled.li`\n  margin-bottom: 10px;\n  padding: 20px 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n`;\n\ninterface IPriceProp {\n  tickersData?: {\n    ath_date: string;\n    ath_price: number;\n    market_cap: number;\n    market_cap_change_24h: number;\n    percent_change_1h: number;\n    percent_change_1y: number;\n    percent_change_6h: number;\n    percent_change_7d: number;\n    percent_change_12h: number;\n    percent_change_15m: number;\n    percent_change_24h: number;\n    percent_change_30d: number;\n    percent_change_30m: number;\n    percent_from_price_ath: number;\n    price: number;\n    volume_24h: number;\n    volume_24h_change_24h: number;\n  };\n  loading: boolean;\n}\n\nconst Price = ({ tickersData, loading }: IPriceProp) => {\n  return (\n    <Container>\n      {loading ? (\n        'Loading....'\n      ) : (\n        <PriceItem>\n          <PercentChange>ath_price: {tickersData?.ath_price}</PercentChange>\n          <PercentChange>15m: {tickersData?.percent_change_15m}%</PercentChange>\n          <PercentChange>30m: {tickersData?.percent_change_30m}%</PercentChange>\n          <PercentChange>1h: {tickersData?.percent_change_1h}%</PercentChange>\n          <PercentChange>6h: {tickersData?.percent_change_6h}%</PercentChange>\n          <PercentChange>12h: {tickersData?.percent_change_12h}%</PercentChange>\n          <PercentChange>24h: {tickersData?.percent_change_24h}%</PercentChange>\n          <PercentChange>7d: {tickersData?.percent_change_7d}%</PercentChange>\n          <PercentChange>30d: {tickersData?.percent_change_30d}%</PercentChange>\n          <PercentChange>1y: {tickersData?.percent_change_1y}%</PercentChange>\n        </PriceItem>\n      )}\n    </Container>\n  );\n};\n\nexport default Price;\n","import { useQuery } from 'react-query';\nimport {\n  useParams,\n  useLocation,\n  Routes,\n  Route,\n  Link,\n  useMatch,\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport { Helmet } from 'react-helmet';\nimport Chart from './Chart';\nimport Price from './Price';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst LinkContainer = styled.div`\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 15px;\n  position: absolute;\n  top: 20px;\n  a {\n    display: block;\n    padding: 10px 10px;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  state: { name: string };\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nconst Coin = () => {\n  const { coinId } = useParams() as RouteParams;\n  const { state } = useLocation() as RouteState;\n  const priceMatch = useMatch('/:coinId/price');\n  const chartMatch = useMatch('/:coinId/chart');\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId)\n  );\n\n  // const [info, setInfo] = useState<InfoData>();\n  // const [loading, setLoading] = useState(true);\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n\n  // useEffect(() => {\n  //   (async () => {\n  //     //캡슐화\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Header>\n        <Helmet>\n          <title>\n            {state?.name ? state.name : loading ? 'Loading..' : infoData?.name}\n          </title>\n        </Helmet>\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading..' : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{tickersData?.quotes.USD.price}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n            <Tab isActive={chartMatch != null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n          </Tabs>\n\n          <Routes>\n            <Route\n              path=\"price\"\n              element={\n                <Price\n                  loading={loading}\n                  tickersData={tickersData?.quotes.USD}\n                />\n              }\n            />\n            <Route path=\"chart\" element={<Chart coinId={coinId} />} />\n          </Routes>\n        </>\n      )}\n      <LinkContainer>\n        <Link to={`/`}>Go Home &rarr;</Link>\n      </LinkContainer>\n    </Container>\n  );\n};\n\nexport default Coin;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchCoins } from '../api';\nimport { Helmet } from 'react-helmet';\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: #718093;\n  color: ${(props) => props.theme.accentColor};\n  margin-bottom: 10px;\n  border-radius: 10px;\n  a {\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.textColor};\n    }\n  }\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nconst Coins = () => {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\n                <Img\n                  src={`\nhttps://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n};\n\nexport default Coins;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<Coins />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/:coinId/*\" element={<Coin />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport Router from './Router';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@300;400;500;700&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Oswald', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n  \n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { theme } from './theme';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const theme: DefaultTheme = {\n  bgColor: '#192a56',\n  textColor: '#dcdde1',\n  accentColor: '#fbc531',\n};\n"],"sourceRoot":""}